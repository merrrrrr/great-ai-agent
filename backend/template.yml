AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: Great AI Agent API Gateway and Lambda Functions

Parameters:
  Environment:
    Type: String
    Default: dev
  S3Bucket:
    Type: String
    Default: great-ai-agent-media
  DBUri:
    Type: String
    NoEcho: true

Resources:
  # DynamoDB Table
  CampaignsTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: great-ai-agent-campaigns
      BillingMode: PAY_PER_REQUEST
      AttributeDefinitions:
        - AttributeName: id
          AttributeType: S
        - AttributeName: userId
          AttributeType: S
      KeySchema:
        - AttributeName: id
          KeyType: HASH
      GlobalSecondaryIndexes:
        - IndexName: UserIndex
          KeySchema:
            - AttributeName: userId
              KeyType: HASH
          Projection:
            ProjectionType: ALL

  # API Gateway
  GreatAIAgentApi:
    Type: AWS::Serverless::Api
    Properties:
      StageName: !Ref Environment
      Cors:
        AllowMethods: "'GET,POST,OPTIONS'"
        AllowHeaders: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'"
        AllowOrigin: "'*'"

  # Lambda Functions
  GenerateCampaignFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: functions/generateCampaign/
      Handler: index.handler
      Runtime: nodejs18.x
      Timeout: 30
      Environment:
        Variables:
          S3_BUCKET: !Ref S3Bucket
      Policies:
        - Version: "2012-10-17"
          Statement:
            - Effect: Allow
              Action:
                - bedrock:InvokeModel
              Resource: "*"
            - Effect: Allow
              Action:
                - s3:GetObject
                - s3:PutObject
                - s3:PutObjectAcl
              Resource: !Sub "arn:aws:s3:::${S3Bucket}/*"
      Events:
        GenerateCampaign:
          Type: Api
          Properties:
            RestApiId: !Ref GreatAIAgentApi
            Path: /generateCampaign
            Method: post

  SaveCampaignFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: functions/saveCampaign/
      Handler: index.handler
      Runtime: nodejs18.x
      Environment:
        Variables:
          CAMPAIGNS_TABLE: !Ref CampaignsTable
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref CampaignsTable
      Events:
        SaveCampaign:
          Type: Api
          Properties:
            RestApiId: !Ref GreatAIAgentApi
            Path: /saveCampaign
            Method: post

  GetCampaignsFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: functions/getCampaigns/
      Handler: index.handler
      Runtime: nodejs18.x
      Environment:
        Variables:
          CAMPAIGNS_TABLE: !Ref CampaignsTable
      Policies:
        - DynamoDBReadPolicy:
            TableName: !Ref CampaignsTable
      Events:
        GetCampaigns:
          Type: Api
          Properties:
            RestApiId: !Ref GreatAIAgentApi
            Path: /getCampaigns
            Method: get

Outputs:
  ApiGatewayUrl:
    Description: API Gateway endpoint URL
    Value: !Sub "https://${GreatAIAgentApi}.execute-api.${AWS::Region}.amazonaws.com/${Environment}"